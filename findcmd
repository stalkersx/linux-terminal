#!/bin/bash

# found command everywhere
# cp findcmd /bin
# find directory
if [ -f /data/data/com.termux/files/usr/bin/bash ];then
		os=~/github/linux-terminal
elif [ -f /usr/bin/bash ];then
		os=~/Documents/github/linux-terminal
else
		echo "[!] shell os unknown"; exit
fi

# get command
find_command(){
  # get list folder
  for fd in $(ls);do
    # read about command
    if [ -f $fd ] && [[ $fd == $1 ]];then
      baca=$fd; locf=$(pwd); return
    fi
    # check directory
    if [ -d $fd ] && [ -x $fd ];then cd $fd; find_command $1; cd ..; fi
  done
}

# found file
cd $os
find_command "$1.txt" baca locf
command="$locf/$baca"

# get package info command
list_package(){
  if ! [ -d "$os/command-$1" ];then
    echo "! unknown flags $1" && exit
  fi
  for gp1 in $(ls $os | cut -d '-' -f 2);do
    if [[ $gp1 == $1 ]];then
      for gc in $(ls $os/command-$gp1);do
        cname=$(echo $gc | cut -d '.' -f 1) 
        cinfo=$(cat $os/command-$gp1/$gc | cut -d '_' -f 3 | head -n 2 | cut -d ':' -f 2)
        echo -e "$cname $cinfo\n"
      done
    fi
  done
}

# get help about command
help_command(){
    echo "
findcmd [command_name]
findcmd [options] [flags]

OPTIONS :
list      show info command

FLAGS :"
  for gp in $(ls $os);do
    if [ -d $gp ];then
      echo $gp | cut -d '-' -f 2
    fi
  done
}

# read about command
if [[ $1 == "list" ]];then
  if [ -z $2 ];then
    echo "! flags is empty"
  else
    list_package $2
  fi
else
  if [ -f $command ];then
    less $command
  else
    if [ -z $1 ];then
      help_command
    else
      echo "! command about file <$1.txt> not found"
    fi
  fi
fi
